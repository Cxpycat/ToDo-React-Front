{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0430\\\\src\\\\components\\\\Dashboard.js\";\nimport React from \"react\";\nimport Task from './Task';\nimport TodoAdd from \"./TodoAdd\";\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Dashboard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [],\n      error: ''\n    };\n\n    this.updateTodos = async () => {\n      const urlToDo = `http://localhost:1337/todos?userId=${this.props.userId}`;\n\n      try {\n        const result = await fetch(urlToDo);\n        const todos = await result.json();\n        this.setState({\n          todos\n        });\n      } catch (err) {\n        this.setState({\n          error: 'Ошибка'\n        });\n      }\n    };\n\n    this.handleLoginClick = () => {\n      const {\n        handleLoginClick\n      } = this.props;\n      handleLoginClick(false);\n    };\n\n    this.changeToDo = async id => {\n      const todos = [...this.state.todos];\n      const todo = todos.filter(todo => todo.id === id)[0];\n      todo.completed = !todo.completed;\n      await fetch('http://localhost:1337/todos', {\n        method: 'PUT',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n        body: JSON.stringify(todo)\n      });\n      await this.updateTodos();\n    };\n\n    this.addTodo = async todo => {\n      const id = await this.getLastId();\n      const newTodo = {\n        userId: this.props.userId,\n        id: id,\n        title: todo,\n        completed: false\n      };\n      await fetch('http://localhost:1337/todos', {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n        body: JSON.stringify(newTodo)\n      });\n      await this.updateTodos();\n    };\n\n    this.confirmDeleting = id => {\n      confirmAlert({\n        title: 'Confirm to delete',\n        message: 'Are you sure you want to delete this todo?',\n        buttons: [{\n          label: 'Yes',\n          onClick: () => this.deleteTodo(id)\n        }, {\n          label: 'No',\n          onClick: () => 1\n        }]\n      });\n    };\n\n    this.deleteTodo = async id => {\n      await fetch('http://localhost:1337/todos', {\n        method: 'DELETE',\n        mode: 'cors',\n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n        body: JSON.stringify({\n          id: id\n        })\n      });\n      await this.updateTodos();\n    };\n\n    this.getLastId = async () => {\n      const todosUrl = 'http://localhost:1337/todos';\n      const requestResult = await fetch(todosUrl);\n      const todos = await requestResult.json();\n      return todos[todos.length - 1]['id'] + 1;\n    };\n  }\n\n  async componentDidMount() {\n    await this.updateTodos();\n  }\n\n  render() {\n    const {\n      error,\n      todos\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"top\",\n        children: [\"\\u0412\\u0441\\u0435\\u0433\\u043E \\u0437\\u0430\\u0434\\u0430\\u0447: \", todos.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TodoAdd, {\n        addTodo: this.addTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }, this), todos.map(task => /*#__PURE__*/_jsxDEV(Task, {\n        task: task,\n        toggleCompleted: () => this.changeToDo(task.id),\n        deleteTodo: () => this.confirmDeleting(task.id)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 26\n      }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleClick,\n        className: \"exit\",\n        children: \"\\u0412\\u044B\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["D:/Практика/src/components/Dashboard.js"],"names":["React","Task","TodoAdd","confirmAlert","Dashboard","Component","state","todos","error","updateTodos","urlToDo","props","userId","result","fetch","json","setState","err","handleLoginClick","changeToDo","id","todo","filter","completed","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","addTodo","getLastId","newTodo","title","confirmDeleting","message","buttons","label","onClick","deleteTodo","todosUrl","requestResult","length","componentDidMount","render","map","task","handleClick"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Task from './Task';\nimport TodoAdd from \"./TodoAdd\";\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\n\n\n\n\nclass Dashboard extends React.Component{\n  state ={\n    todos: [],\n    error: ''\n  }\n\n  async componentDidMount() {\n    await this.updateTodos();\n  };\n    \n  updateTodos = async() => {\n   const urlToDo =`http://localhost:1337/todos?userId=${this.props.userId}`;\n  try{\n    const result = await fetch(urlToDo)\n    const todos = await result.json()\n    this.setState({todos});\n  } catch(err) {\n    this.setState({\n    error: 'Ошибка'\n    })\n  } \n}\n\n  handleLoginClick = () => {\n    const {handleLoginClick} = this.props;\n    handleLoginClick(false);\n  };\n\n  changeToDo = async id => {\n        const todos = [...this.state.todos];\n        const todo = todos.filter(todo => todo.id === id)[0];\n        todo.completed = !todo.completed;\n\n        await fetch('http://localhost:1337/todos', {\n            method: 'PUT',\n            mode: 'cors',\n            cache: 'no-cache',\n            credentials: 'same-origin',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            redirect: 'follow',\n            referrerPolicy: 'no-referrer',\n            body: JSON.stringify(todo)\n        });\n\n        await this.updateTodos();\n    };\n\n    addTodo = async todo => {\n        const id = await this.getLastId();\n        const newTodo = {\n            userId: this.props.userId,\n            id: id,\n            title: todo,\n            completed: false\n        };\n\n        await fetch('http://localhost:1337/todos', {\n            method: 'POST',\n            mode: 'cors',\n            cache: 'no-cache',\n            credentials: 'same-origin',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            redirect: 'follow',\n            referrerPolicy: 'no-referrer',\n            body: JSON.stringify(newTodo)\n        });\n\n        await this.updateTodos();\n    };\n\n    confirmDeleting = id => {\n        confirmAlert({\n            title: 'Confirm to delete',\n            message: 'Are you sure you want to delete this todo?',\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => this.deleteTodo(id)\n                },\n                {\n                    label: 'No',\n                    onClick: () => 1\n                }\n            ]\n        });\n    };\n\n    deleteTodo = async id => {\n        await fetch('http://localhost:1337/todos', {\n            method: 'DELETE',\n            mode: 'cors',\n            cache: 'no-cache',\n            credentials: 'same-origin',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            redirect: 'follow',\n            referrerPolicy: 'no-referrer',\n            body: JSON.stringify({id: id})\n        });\n\n        await this.updateTodos();\n    };\n\n    getLastId = async () => {\n        const todosUrl = 'http://localhost:1337/todos';\n        const requestResult = await fetch(todosUrl);\n        const todos = await requestResult.json();\n        return todos[todos.length - 1]['id'] + 1;\n    }\n\n  render(){\n    const {error, todos} =this.state\n\n    return <div className=\"Dashboard\">\n      <h1 className=\"top\">Всего задач: {todos.length}</h1>\n      <h2>{error}</h2>\n      <TodoAdd addTodo={this.addTodo} />\n      {todos.map(task =>(<Task \n      task={task}\n      key={task.id}\n      toggleCompleted={() => this.changeToDo(task.id)}\n      deleteTodo={() => this.confirmDeleting(task.id)}\n     ></Task>\n     \n       )) \n     }<br></br>\n     <button onClick={this.handleClick} className=\"exit\">Выйти</button>\n    </div>\n  }\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}