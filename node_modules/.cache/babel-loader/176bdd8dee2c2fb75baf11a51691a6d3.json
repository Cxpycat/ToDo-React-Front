{"ast":null,"code":"var _jsxFileName = \"D:\\\\my-app\\\\src\\\\App.js\";\nimport React from \"react\";\nimport Task from './components/Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst urlToDo = 'https://jsonplaceholder.typicode.com/todos';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [],\n      error: ''\n    };\n\n    this.componentDidMount = async () => {\n      let {\n        todos\n      } = [];\n\n      try {\n        const result = await fetch(urlToDo);\n        todos = await result.json();\n      } catch (err) {\n        this.setState({\n          error: 'Ошибка'\n        });\n      }\n\n      this.setState({\n        todos\n      });\n    };\n  }\n\n  render() {\n    const {\n      error,\n      todos\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"top\",\n        children: [\"Actice tasks: \", tasks.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n        task: todos\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/my-app/src/App.js"],"names":["React","Task","urlToDo","App","Component","state","todos","error","componentDidMount","result","fetch","json","err","setState","render","tasks","length","map","task","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AACA,MAAMC,OAAO,GAAE,4CAAf;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAC/BC,KAD+B,GACxB;AACLC,MAAAA,KAAK,EAAE,EADF;AAELC,MAAAA,KAAK,EAAE;AAFF,KADwB;;AAAA,SAM/BC,iBAN+B,GAMX,YAAW;AAC7B,UAAI;AAACF,QAAAA;AAAD,UAAU,EAAd;;AACF,UAAG;AACD,cAAMG,MAAM,GAAG,MAAMC,KAAK,CAACR,OAAD,CAA1B;AACAI,QAAAA,KAAK,GAAG,MAAMG,MAAM,CAACE,IAAP,EAAd;AACC,OAHH,CAGI,OAAMC,GAAN,EAAW;AACX,aAAKC,QAAL,CAAc;AACZN,UAAAA,KAAK,EAAE;AADK,SAAd;AAGD;;AAED,WAAKM,QAAL,CAAc;AACZP,QAAAA;AADY,OAAd;AAGD,KApB8B;AAAA;;AAsB/BQ,EAAAA,MAAM,GAAE;AACN,UAAM;AAACP,MAAAA,KAAD;AAAQD,MAAAA;AAAR,QAAgB,KAAKD,KAA3B;AAEA,wBAAO;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACL;AAAI,QAAA,SAAS,EAAC,KAAd;AAAA,qCAAmCU,KAAK,CAACC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,cADK,EAGLD,KAAK,CAACE,GAAN,CAAUC,IAAI,iBAAI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEZ;AAAZ,SAAwBY,IAAI,CAACC,EAA7B;AAAA;AAAA;AAAA;AAAA,cAAlB,CAHK;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAOD;;AAhC8B;;AAmCjC,eAAehB,GAAf","sourcesContent":["import React from \"react\";\nimport Task from './components/Task';\nconst urlToDo ='https://jsonplaceholder.typicode.com/todos'\n\nclass App extends React.Component{\n  state ={\n    todos: [],\n    error: ''\n  }\n   \n  componentDidMount = async() => {\n    let {todos} = [];\n  try{\n    const result = await fetch(urlToDo)\n    todos = await result.json()\n    } catch(err) {\n      this.setState({\n        error: 'Ошибка'\n      })\n    }\n  \n    this.setState({\n      todos,\n    })\n  } \n\n  render(){\n    const {error, todos} =this.state\n\n    return <div className=\"App\">\n      <h1 className=\"top\">Actice tasks: {tasks.length}</h1>\n\n     {tasks.map(task =>(<Task task={todos} key={task.id}></Task>\n       )) \n     }\n    </div>\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}