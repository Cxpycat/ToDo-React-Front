{"ast":null,"code":"var _jsxFileName = \"D:\\\\my-app\\\\src\\\\App.js\";\nimport React from \"react\";\nimport './index.css';\nimport LoginForm from './components/LoginForm';\nimport Dashboard from './components/Dashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoggedIn: false,\n      userId: null\n    };\n\n    this.handleLoginClick = param => {\n      this.setState({\n        isLoggedIn: param\n      });\n    };\n\n    this.setUserId = userId => {\n      this.setState({\n        userId\n      });\n    };\n  }\n\n  doneTask(id) {\n    let tasks = this.tasks;\n    const index = tasks.map(task => task.id).indexOf(id);\n    tasks[index].done = true;\n    this.setTasks(tasks);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: this.state.isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"MainScreen\",\n        children: /*#__PURE__*/_jsxDEV(Dashboard, {\n          handleLoginClick: this.handleLoginClick,\n          userId: this.state.userId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 33\n      }, this) : /*#__PURE__*/_jsxDEV(LoginForm, {\n        handleLoginClick: this.handleLoginClick,\n        userId: this.state.userId,\n        setUserId: this.setUserId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/my-app/src/App.js"],"names":["React","LoginForm","Dashboard","App","Component","state","isLoggedIn","userId","handleLoginClick","param","setState","setUserId","doneTask","id","tasks","index","map","task","indexOf","done","setTasks","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;AAGA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAC/BC,KAD+B,GACvB;AACNC,MAAAA,UAAU,EAAE,KADN;AAENC,MAAAA,MAAM,EAAE;AAFF,KADuB;;AAAA,SAM/BC,gBAN+B,GAMZC,KAAK,IAAI;AAC1B,WAAKC,QAAL,CAAc;AAACJ,QAAAA,UAAU,EAAEG;AAAb,OAAd;AACD,KAR8B;;AAAA,SAS/BE,SAT+B,GASnBJ,MAAM,IAAI;AACtB,WAAKG,QAAL,CAAc;AAACH,QAAAA;AAAD,OAAd;AACC,KAX8B;AAAA;;AAY/BK,EAAAA,QAAQ,CAACC,EAAD,EAAK;AACX,QAAIC,KAAK,GAAG,KAAKA,KAAjB;AACA,UAAMC,KAAK,GAAGD,KAAK,CAACE,GAAN,CAAUC,IAAI,IAAIA,IAAI,CAACJ,EAAvB,EAA2BK,OAA3B,CAAmCL,EAAnC,CAAd;AACAC,IAAAA,KAAK,CAACC,KAAD,CAAL,CAAaI,IAAb,GAAoB,IAApB;AACA,SAAKC,QAAL,CAAcN,KAAd;AACD;;AAEDO,EAAAA,MAAM,GAAE;AAEN,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBACG,KAAKhB,KAAL,CAAWC,UAAX,gBAAuB;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACtB,QAAC,SAAD;AAAW,UAAA,gBAAgB,EAAE,KAAKE,gBAAlC;AAAoD,UAAA,MAAM,EAAE,KAAKH,KAAL,CAAWE;AAAvE;AAAA;AAAA;AAAA;AAAA;AADsB;AAAA;AAAA;AAAA;AAAA,cAAvB,gBAEO,QAAC,SAAD;AAAW,QAAA,gBAAgB,EAAE,KAAKC,gBAAlC;AAAoD,QAAA,MAAM,EAAE,KAAKH,KAAL,CAAWE,MAAvE;AAA+E,QAAA,SAAS,EAAE,KAAKI;AAA/F;AAAA;AAAA;AAAA;AAAA;AAHV;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AA5B8B;;AA+BjC,eAAeR,GAAf","sourcesContent":["import React from \"react\";\nimport './index.css';\nimport LoginForm from './components/LoginForm';\nimport Dashboard from './components/Dashboard';\n\n\nclass App extends React.Component{\n  state = {\n    isLoggedIn: false,\n    userId: null,\n  };\n\n  handleLoginClick = param => {\n    this.setState({isLoggedIn: param});\n  }\n  setUserId = userId => {\n  this.setState({userId})\n  }\n  doneTask(id) {\n    let tasks = this.tasks;\n    const index = tasks.map(task => task.id).indexOf(id);\n    tasks[index].done = true;\n    this.setTasks(tasks);\n  }\n  \n  render(){\n    \n    return (\n      <div className=\"App\">\n        {this.state.isLoggedIn? <div className=\"MainScreen\">\n          <Dashboard handleLoginClick={this.handleLoginClick} userId={this.state.userId} />\n        </div>: <LoginForm handleLoginClick={this.handleLoginClick} userId={this.state.userId} setUserId={this.setUserId} />}\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}